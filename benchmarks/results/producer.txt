# JMH version: 1.21
# VM version: JDK 1.8.0_221, Java HotSpot(TM) 64-Bit Server VM, 25.221-b11
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_221.jdk/Contents/Home/jre/bin/java
# VM options: <none>
# Warmup: 1 iterations, 10 s each
# Measurement: 10 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: monix.kafka.benchmarks.ProducerBenchmark.monix_1P_1RF

# Run progress: 0.00% complete, ETA 00:03:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.736 ops/s
Iteration   1: 0.991 ops/s
Iteration   2: 0.958 ops/s
Iteration   3: 0.891 ops/s
Iteration   4: 0.914 ops/s
Iteration   5: 0.973 ops/s
Iteration   6: 1.012 ops/s
Iteration   7: 0.860 ops/s
Iteration   8: 0.905 ops/s
Iteration   9: 0.871 ops/s
Iteration  10: 1.006 ops/s


Result "monix.kafka.benchmarks.ProducerBenchmark.monix_1P_1RF":
  0.938 ±(99.9%) 0.086 ops/s [Average]
  (min, avg, max) = (0.860, 0.938, 1.012), stdev = 0.057
  CI (99.9%): [0.852, 1.024] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_221, Java HotSpot(TM) 64-Bit Server VM, 25.221-b11
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_221.jdk/Contents/Home/jre/bin/java
# VM options: <none>
# Warmup: 1 iterations, 10 s each
# Measurement: 10 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: monix.kafka.benchmarks.ProducerBenchmark.monix_2P_1RF

# Run progress: 50.00% complete, ETA 00:01:57
# Fork: 1 of 1
# Warmup Iteration   1: 0.875 ops/s
Iteration   1: 1.027 ops/s
Iteration   2: 1.038 ops/s
Iteration   3: 0.993 ops/s
Iteration   4: 0.998 ops/s
Iteration   5: 1.018 ops/s
Iteration   6: 0.985 ops/s
Iteration   7: 1.028 ops/s
Iteration   8: 0.982 ops/s
Iteration   9: 1.010 ops/s
Iteration  10: 0.917 ops/s


Result "monix.kafka.benchmarks.ProducerBenchmark.monix_2P_1RF":
  1.000 ±(99.9%) 0.052 ops/s [Average]
  (min, avg, max) = (0.917, 1.000, 1.038), stdev = 0.035
  CI (99.9%): [0.947, 1.052] (assumes normal distribution)


# Run complete. Total time: 00:03:54

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                        Mode  Cnt  Score   Error  Units
ProducerBenchmark.monix_1P_1RF  thrpt   10  0.938 ± 0.086  ops/s
ProducerBenchmark.monix_2P_1RF  thrpt   10  1.000 ± 0.052  ops/s
